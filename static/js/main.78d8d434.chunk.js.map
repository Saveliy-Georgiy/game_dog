{"version":3,"sources":["game/Fields/Field/Field.module.css","game/Game.module.css","music/vystrel-drobovika.mp3","game/Fields/Fields.module.css","pictures/WordPress.jpg","game/Counter/Counter.module.css","App.module.css","serviceWorker.js","game/Fields/Field/Field.jsx","game/Fields/Fields.jsx","game/Counter/Counter.jsx","game/Game.jsx","App.jsx","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Field","render","className","styles","item","src","dog","photo","props","visiblePicture","show","hidden","alt","onClick","inc","React","Component","Fields","circle","circles","map","c","index","key","randomIndex","mainBlock","Counter","counter","currentValue","Game","audioRef","createRef","state","setRandomImageIndex","setState","Math","floor","random","audio","current","currentTime","play","wrapper","music","ref","setInterval","this","App","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,QAAU,uBAAuB,QAAU,uBAAuB,KAAO,oBAAoB,MAAQ,qBAAqB,OAAS,sBAAsB,KAAO,sB,iBCAvND,EAAOC,QAAU,CAAC,UAAY,wBAAwB,QAAU,sBAAsB,QAAU,sBAAsB,KAAO,mBAAmB,MAAQ,oBAAoB,QAAU,wB,sBCDtLD,EAAOC,QAAU,IAA0B,+C,gBCC3CD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,QAAU,wBAAwB,QAAU,wBAAwB,KAAO,qBAAqB,MAAQ,sBAAsB,KAAO,uB,gBCD7LD,EAAOC,QAAU,IAA0B,uC,gBCC3CD,EAAOC,QAAU,CAAC,QAAU,2B,gBCA5BD,EAAOC,QAAU,CAAC,IAAM,mB,mGCWJC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,6JCGSC,E,4MAfXC,OAAS,WACL,OACI,yBAAKC,UAAWC,IAAOC,MACnB,yBACIC,IAAKC,IACLJ,UAAWC,IAAOI,MAAQ,KAAO,EAAKC,MAAMC,eACtCN,IAAOO,KACPP,IAAOQ,QACbC,IAAI,MACJC,QAAS,EAAKL,MAAMC,eAAiB,EAAKD,MAAMM,IAAM,Q,YAXtDC,IAAMC,WCkBXC,E,4MAhBXhB,OAAS,WACL,IAAIiB,EAAS,EAAKV,MAAMW,QAAQC,KAAI,SAACC,EAAGC,GAAJ,OAChC,kBAAC,EAAD,CACIC,IAAKD,EACNb,eAAkBa,IAAU,EAAKd,MAAMgB,YACtCV,IAAK,EAAKN,MAAMM,SAGxB,OACI,yBAAKZ,UAAWC,IAAOsB,WAClBP,I,YAZIH,IAAMC,W,iBCWZU,E,4MAVXzB,OAAS,WAEL,OACI,yBAAKC,UAAWC,IAAOwB,SAClB,EAAKnB,MAAMoB,e,YANNb,IAAMC,WCkDba,E,4MA7CXC,SAAWf,IAAMgB,Y,EAEjBC,MAAQ,CACJd,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACjCM,YAAa,EACbI,aAAc,G,EAOlBK,oBAAsB,WAClB,EAAKC,SAAS,CACVV,YAAaW,KAAKC,MAAsB,EAAhBD,KAAKE,a,EAIrCvB,IAAM,WACF,IAAIwB,EAAQ,EAAKR,SAASS,QAE1BD,EAAME,YAAc,EAEpBF,EAAMG,OACF,EAAKP,SAAS,CACVN,aAAc,EAAKI,MAAMJ,aAAe,K,EAIpD3B,OAAS,WACL,OACI,yBAAKC,UAAWC,IAAOsB,WACnB,yBAAKvB,UAAWC,IAAOuC,SACnB,kBAAC,EAAD,CACIvB,QAAS,EAAKa,MAAMd,OACpBM,YAAa,EAAKQ,MAAMR,YACxBV,IAAK,EAAKA,OAElB,2BAAOT,IAAKsC,IAAOC,IAAK,EAAKd,WAC7B,kBAAC,EAAD,CAASF,aAAc,EAAKI,MAAMJ,iB,kEA9B1CiB,YAAYC,KAAKb,oBAAqB,S,GAX3BlB,IAAMC,W,iBCSV+B,E,4MATX9C,OAAS,WACL,OACI,yBAAKC,UAAWC,IAAO4C,KACnB,kBAAC,EAAD,Q,YALEhC,IAAMC,W,QCIpBgC,IAAS/C,OACL,kBAAC,IAAD,KACI,kBAAC,EAAD,OACcgD,SAASC,eAAe,SNwH5C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.78d8d434.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainBlock\":\"Field_mainBlock__15T_P\",\"counter\":\"Field_counter__1kw_V\",\"wrapper\":\"Field_wrapper__3b_-v\",\"item\":\"Field_item__1LSWM\",\"photo\":\"Field_photo__MWEsV\",\"hidden\":\"Field_hidden__1p8uA\",\"show\":\"Field_show__2jsZP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainBlock\":\"Game_mainBlock__2-TMO\",\"counter\":\"Game_counter__1yOGJ\",\"wrapper\":\"Game_wrapper__KKp0E\",\"item\":\"Game_item__2uD_w\",\"photo\":\"Game_photo__qI3Ja\",\"visible\":\"Game_visible__8-zgN\"};","module.exports = __webpack_public_path__ + \"static/media/vystrel-drobovika.7b484a18.mp3\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainBlock\":\"Fields_mainBlock__1p3g_\",\"counter\":\"Fields_counter__3tWIU\",\"wrapper\":\"Fields_wrapper__zQACm\",\"item\":\"Fields_item__1_9fR\",\"photo\":\"Fields_photo__11Qgf\",\"show\":\"Fields_show__3IfKt\"};","module.exports = __webpack_public_path__ + \"static/media/WordPress.304d75e9.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"counter\":\"Counter_counter__2Lws0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1BJU4\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. Counter is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport styles from \"./Field.module.css\";\r\nimport dog from \"../../../pictures/WordPress.jpg\";\r\n\r\nclass Field extends React.Component {\r\n\r\n    render = () => {\r\n        return (\r\n            <div className={styles.item}>\r\n                <img\r\n                    src={dog}\r\n                    className={styles.photo + ' ' + (this.props.visiblePicture\r\n                        ? styles.show\r\n                        : styles.hidden)}\r\n                    alt=\"dog\"\r\n                    onClick={this.props.visiblePicture ? this.props.inc : ' '}/>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Field;\r\n","import React from 'react';\nimport styles from './Fields.module.css'\nimport Field from \"./Field/Field\";\n\nclass Fields extends React.Component {\n\n    render = () => {\n        let circle = this.props.circles.map((c, index) =>\n            <Field\n                key={index}\n               visiblePicture = {index === this.props.randomIndex}\n                inc={this.props.inc}\n    />);\n\n        return (\n            <div className={styles.mainBlock}>\n                {circle}\n            </div>\n        );\n    }\n}\n\nexport default Fields;\n","import React from 'react';\r\nimport styles from './Counter.module.css'\r\n\r\nclass Counter extends React.Component {\r\n\r\n    render = () => {\r\n\r\n        return (\r\n            <div className={styles.counter}>\r\n                {this.props.currentValue}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Counter;\r\n","import React from \"react\"\r\nimport styles from \"./Game.module.css\";\r\nimport music from \"./../music/vystrel-drobovika.mp3\";\r\nimport Fields from \"./Fields/Fields\";\r\nimport Counter from \"./Counter/Counter\";\r\n\r\nclass Game extends React.Component {\r\n\r\n    audioRef = React.createRef();\r\n\r\n    state = {\r\n        circle: [0, 1, 2, 3, 4, 5, 6, 7, 8],\r\n        randomIndex: 0,\r\n        currentValue: 0,\r\n    };\r\n\r\n    componentDidMount() {\r\n        setInterval(this.setRandomImageIndex, 1000);\r\n    }\r\n\r\n    setRandomImageIndex = () => {\r\n        this.setState({\r\n            randomIndex: Math.floor(Math.random() * 9)\r\n        });\r\n    };\r\n\r\n    inc = () => {\r\n        let audio = this.audioRef.current;\r\n        // перемотать трек в начало перед проигрыванием\r\n        audio.currentTime = 0;\r\n        // даём команду плееру - играй\r\n        audio.play();\r\n            this.setState({\r\n                currentValue: this.state.currentValue + 1,\r\n            });\r\n    };\r\n\r\n    render = () => {\r\n        return (\r\n            <div className={styles.mainBlock}>\r\n                <div className={styles.wrapper}>\r\n                    <Fields\r\n                        circles={this.state.circle}\r\n                        randomIndex={this.state.randomIndex}\r\n                        inc={this.inc}/>\r\n                </div>\r\n                <audio src={music} ref={this.audioRef}/>\r\n                <Counter currentValue={this.state.currentValue}/>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Game;\r\n","import React from \"react\";\nimport Game from \"./game/Game\";\nimport styles from \"./App.module.css\";\n\nclass App extends React.Component {\n\n    render = () => {\n        return (\n            <div className={styles.App}>\n                <Game/>\n            </div>\n        );\n    };\n}\n\nexport default App;\n","import * as serviceWorker from \"./serviceWorker\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nlet rerenderEntireTree = () => {\n    ReactDOM.render(\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>, document.getElementById(\"root\"));\n};\n\nrerenderEntireTree();\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}